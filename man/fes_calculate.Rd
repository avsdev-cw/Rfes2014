% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rfes2014.R
\name{fes_calculate}
\alias{fes_calculate}
\alias{fes_calculate.double}
\alias{fes_calculate.list}
\alias{fes_calculate.data.frame}
\alias{fes_calculate.matrix}
\alias{fes_calculate.tbl_df}
\title{Performs a calculation with a FES2014 instance}
\usage{
fes_calculate(hdl, ...)

\method{fes_calculate}{double}(hdl, lat, long, epoch_sec)

\method{fes_calculate}{list}(hdl, lat, long, epoch_sec)

\method{fes_calculate}{data.frame}(hdl, data, epoch_sec = NULL,
  latCol = "lat", lonCol = "lon", epochSecCol = "epoch_sec")

\method{fes_calculate}{matrix}(hdl, data, epoch_sec = NULL,
  latCol = "lat", lonCol = "lon", epochSecCol = "epoch_sec")

\method{fes_calculate}{tbl_df}(hdl, data, epoch_sec = NULL,
  latCol = "lat", lonCol = "lon", epochSecCol = "epoch_sec")
}
\arguments{
\item{hdl}{<extptr>; a FES2014 handle}

\item{lat}{double; a double representing latitudes}

\item{long}{double; a double representing longitudes}

\item{epoch_sec}{integer; an integer representing seconds since POSIX
epoch (1970/01/01 00:00:00 UTC). Negative numbers are accepted.}

\item{data}{data.frame/tibble/matrix; a data.frame, matrix or tibble
containing 3 columns (lat/lon/epoch_sec) or 2 columns (lat/long) with the
epoch_sec parameter. Column names can be provided as extra parameters.}

\item{latCol}{string; name of the latitude column in data}

\item{lonCol}{string; name of the longitude column in data}

\item{epochSecCol}{string; name of the timestamps column in data}

\item{lat}{list; a list of latitudes as doubles}

\item{long}{list; a list of longitudes as doubles}

\item{epoch_sec}{list; a list of timestamps (seconds since epoch) as integers}
}
\value{
A list containing h, hLongPeriod and samples for the lat, long,
  timestamp tuple

A data.frame, matrix or tibble containing h, hLongPeriod and samples
  for each lat, long, timestamp tuple
}
\description{
Performs a calculation with a FES2014 instance
}
\examples{
hdl <- fes_new("ocean", "memory", "data/fes2014/eastward_velocity.ini")
res <- fes_calculate(hdl, 50.10, -2.40, 1570536000)
print(res)
fes_delete(hdl)

# To get a unix timestamp from Sys.time():
epoch_secs <- as.integer(Sys.time())

# To get a unix timestamp from Sys.Date() or a Date() object:
epoch_secs <- as.integer(as.POSIXct(Sys.Date(), tx = "UTC"))

# fes_calculate can also take data.frames/tibbles:
df <- data.frame(
  lat = c(50.10, 50.20),
  long = c(-2.40, -2.40),
  epoch_sec = c(1570536000, 1570536000)
)
res <- fes_calculate(hld, df, lonCol = "long")
res <- fes_calculate(hld, dplyr::as_tibble(df), lonCol = "long")

}
\seealso{
\code{\link{fes_new}}; \code{\link[base]{as.POSIXct}} for timestamps
}
